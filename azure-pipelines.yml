trigger:
- develop

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: AzureCLI@2
  inputs:
    azureSubscription: 'Mike-Pay-As-You-Go (220284d2-6a19-4781-87f8-5c564ec4fec9)'
    scriptType: 'pscore'
    scriptLocation: 'scriptPath'
    scriptPath: 'PowerShell-For-DevOps-Automation/Storage-Account/New-AZStorage.ps1'
    arguments: '-name $(name) -resourceGroupName $(resourceGroupName) -location $(location) -container $(container)'

- task: AzureKeyVault@1
  inputs:
    azureSubscription: 'Mike-Pay-As-You-Go (220284d2-6a19-4781-87f8-5c564ec4fec9)'
    KeyVaultName: 'sp-keyvault-cbtnuggets'
    SecretsFilter: 'AKSClientID'

- task: AzureKeyVault@1
  inputs:
    azureSubscription: 'Mike-Pay-As-You-Go (220284d2-6a19-4781-87f8-5c564ec4fec9)'
    KeyVaultName: 'sp-keyvault-cbtnuggets'
    SecretsFilter: 'AKSClientSecret'

- task: AzureCLI@2
  inputs:
    azureSubscription: 'Mike-Pay-As-You-Go (220284d2-6a19-4781-87f8-5c564ec4fec9)'
    scriptType: 'pscore'
    scriptLocation: 'scriptPath'
    scriptPath: 'PowerShell-For-DevOps-Automation/Storage-Account/New-AZStorage.ps1'
    arguments: '-name $(name) -resourceGroupName $(resourceGroupName) -location $(location) -container $(container)'

- task: TerraformTaskV1@0
  inputs:
    provider: 'azurerm'
    command: 'init'
    workingDirectory: 'PowerShell-For-DevOps-Automation/AKS-And-ACI/aks-terraform'
    backendServiceArm: 'Mike-Pay-As-You-Go (220284d2-6a19-4781-87f8-5c564ec4fec9)'
    backendAzureRmResourceGroupName: 'CBTAzure'
    backendAzureRmStorageAccountName: '$(name)'
    backendAzureRmContainerName: '$(container)'
    backendAzureRmKey: 'tf/terraform.tfstate'

- task: TerraformTaskV1@0
  inputs:
    provider: 'azurerm'
    command: 'apply'
    workingDirectory: 'PowerShell-For-DevOps-Automation/AKS-And-ACI/aks-terraform'
    environmentServiceNameAzureRM: 'Mike-Pay-As-You-Go (220284d2-6a19-4781-87f8-5c564ec4fec9)'